const i=async(a,s)=>{if(s){let t=route("admin.businesses.showDetails",a),e=new Headers;return e.append("X-CSRF-TOKEN",s),await(await fetch(t,{method:"POST",headers:e})).json()}else return!1},o=async(a,s)=>{if(s){let t=route("admin.businesses.listBusinesses",a);a==="waitApprovals"&&(t=route("admin.businesses.getWaitApprovalBusinesses"));let e=new Headers;return e.append("X-CSRF-TOKEN",s),await(await fetch(t,{method:"POST",headers:e})).json()}else return!1},p=async(a,s)=>{if(s){let t=route("admin.businesses.store"),e=new Headers;return e.append("X-CSRF-TOKEN",s),e.append("Content-Type","application/json"),await(await fetch(t,{method:"POST",headers:e,body:JSON.stringify(a)})).json()}else return!1},l=async(a,s,t)=>{if(t){let e=route("admin.businesses.update",a),n=new Headers;return n.append("X-CSRF-TOKEN",t),n.append("Content-Type","application/json"),await(await fetch(e,{method:"POST",headers:n,body:JSON.stringify({...s,_method:"PUT"})})).json()}else return!1},u=async(a,s)=>{if(s){let t=route("admin.businesses.destroy",a),e=new Headers;return e.append("X-CSRF-TOKEN",s),await(await fetch(t,{method:"DELETE",headers:e})).json()}else return!1},d=async(a,s)=>{if(s){let t=route("admin.businesses.multipleDestroy"),e=new Headers;return e.append("X-CSRF-TOKEN",s),e.append("Content-Type","application/json"),await(await fetch(t,{method:"POST",headers:e,body:JSON.stringify({ids:a})})).json()}else return!1},h=async(a,s)=>{if(s){let t=route("admin.businesses.approve",a),e=new Headers;return e.append("X-CSRF-TOKEN",s),await(await fetch(t,{method:"POST",headers:e})).json()}else return!1},w=async(a,s)=>{if(s){let t=route("admin.businesses.multipleApprove"),e=new Headers;return e.append("X-CSRF-TOKEN",s),e.append("Content-Type","application/json"),await(await fetch(t,{method:"POST",headers:e,body:JSON.stringify({ids:a})})).json()}else return!1},m=async(a,s)=>{if(s){let t=route("admin.businesses.approveDetails",a),e=new Headers;return e.append("X-CSRF-TOKEN",s),await(await fetch(t,{method:"POST",headers:e})).json()}else return!1};export{h as a,w as b,i as c,u as d,m as e,o as g,d as m,p as s,l as u};
